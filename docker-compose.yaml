# version: '3.8'

services:
  fastapi:
    container_name: app
    build:
      context: ./service
    # image: sample-app
    ports:
      - "5002:5002"
    environment:
      - OTEL_RESOURCE_ATTRIBUTES='service.name=fastapiApp'
      - OTEL_EXPORTER_OTLP_ENDPOINT='grpc://collector:4317'
      # - OTEL_EXPORTER_OTLP_PROTOCOL='grpc'
    volumes:
      - ./service/app:/app
    restart: always
    command: ["opentelemetry-instrument", "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "5002"]
    networks:
      - observability-network

  openobserve:
    image: public.ecr.aws/zinclabs/openobserve:latest
    container_name: openobserve
    restart: unless-stopped
    environment:
      ZO_ROOT_USER_EMAIL: "admin@admin.com"
      ZO_ROOT_USER_PASSWORD: "admin@1234"
    ports:
    - "5080:5080"
    - "5081:5081"
    volumes:
      - ./observe:/data
    networks:
      - observability-network
    # depends_on:
    #   - collector

  collector:
    image: otel/opentelemetry-collector-contrib
    container_name: collector
    volumes:
      - ./collector-config.yaml:/etc/otelcol-contrib/config.yaml
    ports:
    #- 1888:1888 # pprof extension
    #- 8888:8888 # Prometheus metrics exposed by the Collector
      - 8889:8889 # Prometheus exporter metrics
    #- 13133:13133 # health_check extension
      - 4317:4317 # OTLP gRPC receiver
      - 4318:4318 # OTLP http receiver
    command: ["--config=/etc/otelcol-contrib/config.yaml", "--set=extensions.health_check.endpoint=:8889"]
    networks:
      - observability-network
    depends_on:
      - openobserve

networks:
  observability-network:
    driver: bridge